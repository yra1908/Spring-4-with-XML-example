<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<!-- Spring Session -->
	<filter>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- JPA Support part 
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/jpaContext.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	-->
	
	<!-- JPA Support part -->
	
	<!-- The front controller of this Spring Web application, responsible for handling all application requests -->
	<!-- Comment 1 for showing config without web.xml file 
	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextClass</param-name>
			<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
		</init-param>
		
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>com.example.WebConfig</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet> 
	Comment 1 -->

	<!-- Map all requests to the DispatcherServlet for handling -->
	<!-- Comment 2 for showing config without web.xml file 
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>
	Comment 2 -->
	
	<!-- Comment 3 For Lazy instantiation  JPA FetchType
	<filter> 
		<filter-name>SpringOpenEntityManagerInViewFilter</filter-name>
		<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>SpringOpenEntityManagerInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	Comment 3 -->
	
	<!-- Spring Security Support part -->
	<!-- SecurityWebApplicationInitializer.java change this filter initialization
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>-->
	
	<!-- Configured in WebAppInitializer.java
	 <listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener> -->
	
	<!-- Configured in SecurityConfig.java
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/security-config.xml</param-value>
	</context-param> -->
	<!-- Spring Security Support part -->
	
</web-app>